services:
  traefik:
    image: traefik:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik_template.yml:/etc/traefik/traefik_template.yml:ro
      - ./traefik/traefik_dynamic.yml:${TRAEFIK_DYNAMIC_CONF}:ro
      - ./traefik/entrypoint.sh:/entrypoint.sh:ro
      - traefik_certs:/acme
    environment:
      - LOG_LEVEL=info # Increasing logs (default is warning)
      - DEBUG_MODE=false
      - DOMAIN
      - LETSENCRYPT_EMAIL
      - TRAEFIK_DYNAMIC_CONF
    ports:
      - 80:80
      - 443:443
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.auth.basicAuth.users=${TRAEFIK_ADMIN_TOKEN}"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

  glances:
    image: nicolargo/glances
    volumes:
      - ./glances/glances.conf:/glances/conf/glances.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - GLANCES_OPT=-C /glances/conf/glances.conf -w
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.glances.middlewares=auth"
      - "traefik.http.routers.glances.tls.certresolver=letsencrypt"
    pid: host
    profiles:
      - monitoring

  portainer:
    build:
      context: ./portainer
      args:
        - PORTAINER_ADMIN_PASSWORD
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
    profiles:
      - monitoring

  ha:
    image: "ghcr.io/home-assistant/home-assistant:latest"
    volumes:
      - ./ha/config:/config
    network_mode: host # Only for Linux, usefull for MDNS discovery
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - LOCAL_IP
      - EXTERNAL_URL=https://ha.${DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ha.loadbalancer.server.url=http://host.docker.internal:8123"
      - "traefik.http.routers.ha.tls.certresolver=letsencrypt"
    depends_on:
      - z2m

  z2m:
    image: koenkk/zigbee2mqtt
    volumes:
      - ./z2m/data:/app/data
    devices:
      - /dev/serial/by-id/${ZIGBEE_USB}:/dev/ttyUSB0
    environment:
      - ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL=warning # Decreasing logs (default is info)
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.z2m.middlewares=auth"
      - "traefik.http.routers.z2m.tls.certresolver=letsencrypt"
      - "traefik.http.services.z2m.loadbalancer.server.port=8080"
    depends_on:
      - mosquitto

  mosquitto:
    image: eclipse-mosquitto
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    ports:
      - 127.0.0.1:1883:1883 # Necessary for HA, which is not on the same networj

  vw:
    image: vaultwarden/server:1.34.3
    volumes:
      - vw_data:/data
    environment:
      - SIGNUPS_ALLOWED=false
      - DOMAIN=https://vw.${DOMAIN}
      - INVITATIONS_ALLOWED=false
      - ADMIN_TOKEN=${VW_ADMIN_TOKEN}
      - ADMIN_SESSION_LIFETIME=10
      - DISABLE_2FA_REMEMBER=true
      - LOG_LEVEL=info
      - PASSWORD_HINTS_ALLOWED=false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vw.tls.certresolver=letsencrypt"
      - "traefik.http.routers.vw.middlewares=secure-headers@file"
volumes:
  vw_data:
  portainer_data:
  traefik_certs:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: ${LOCAL_IP}
